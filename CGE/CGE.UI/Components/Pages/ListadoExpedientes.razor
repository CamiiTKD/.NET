@page "/usuario/{IdUsuario:int?}/listadoexpedientes"
@rendermode InteractiveServer
@inject NavigationManager Navegador;

@* 1. Inyecto lo que agregaron *@
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using System.Text.Json
@using System.Linq;
@inject ProtectedSessionStorage sessionStorage

@inject CasoDeUsoExpedienteBaja CasoDeUsoExpedienteBaja;
@inject CasoDeUsoExpedienteAlta CasoDeUsoExpedienteAlta;
@inject CasoDeUsoExpedienteConsultaTodos CasoDeUsoListarExpedientes;
@inject CasoDeUsoExpedienteConsultaPorId CasoDeUsoListarId;
@inject ExpedienteCompartido ExpedienteSeleccionado;


<DialogoConfirmacion @ref="dialogo" />

<tbody>
    @if (_lista.Count() > 0)
    {
        @if (userId.Value == 1)){
            <PageTitle>Expedientes</PageTitle>
        }
    else
        {
            <PageTitle>Mi expediente</PageTitle>
        }
        <table class="table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>CARÁTULA</th>
                    <th>CREACIÓN</th>
                    <th>ESTADO</th>
                    <th>ACCIÓN</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var e in _lista)
                {
                    <tr>
                        <td>@e.Id</td>
                        <td>@e.Caratula</td>
                        <td>@e.Creacion</td>
                        <td>@e.Estado</td>
                        <td>
                            <button class="btn btn-primary" @onclick="() => RedirigirListadoTramites(e)">
                                Ver Trámites
                            </button>
                            @if (_listaPermisos.Contains(Permiso.ExpedienteModificacion))
                            {
                                <button class="btn btn-secondary" @onclick="() => RedirigirModificarExpediente(e)">
                                    Modificar
                                </button>
                            }
                            @if (_listaPermisos.Contains(Permiso.ExpedienteBaja))
                            {
                                <button class="btn btn-danger" @onclick="() => ConfirmarEliminacionExpediente(e)">
                                    Eliminar
                                </button>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <h3>No se encontraron expedientes asociados al usuario</h3>
        @if (_listaPermisos.Contains(Permiso.ExpedienteAlta))
        {
            <PageTitle>Crear expediente</PageTitle>
            <h1>Registre un expediente con su carátula</h1>
            <input placeholder="Carátula" @bind="_caratula" />
            <button @onclick="DarDeAltaExpediente(_caratula)">Aceptar</button>
            <br>
        }
    }
</tbody>

@code {
    List<Expediente> _lista = new List<Expediente>();
    List<Permiso> _listaPermisos = RecuperarPermisos();
    string _caratula;
    [Parameter] public int? IdUsuario { get; set; }
    var userId = await sessionStorage.GetAsync<int>("userId");
    protected override void OnInitialized(int userId) @*Esto es válido??*@
    {
        if (userId.Value == 1)
        {
            _lista = CasoDeUsoListarExpedientes.EjecutarConsultarTodos();
        }
        else
        {
            Expediente exp = CasoDeUsoListarId.EjecutarConsultarPorId(userId.Value);
            _lista.Add(exp);
        }
    }
    private void DarDeAltaExpediente(string caratula, Usuario usuario)
    {
        Expediente expediente = new Expediente(caratula, usuario.id);
        CasoDeUsoExpedienteAlta.EjecutarExpedienteAlta(expediente, usuario);
    }
    private void RedirigirListadoTramites(Expediente e)
    {
        Navegador.NavigateTo($"usuario/{IdUsuario}/listadoexpedientes/{e.Id}/listadotramites");
        @* Faltacrear pagina de listado de tramites.
La direccion debe incluir el usuario?*@
    }

    private void RedirigirModificarExpediente(Expediente e)
    {
        ExpedienteSeleccionado.e = e;
        Navegador.NavigateTo($"expediente/{e.Id}/editar");
    }

    DialogoConfirmacion dialogo = null!;
    private void ConfirmarEliminacionExpediente(Expediente e)
    {
        dialogo.OnConfirmado = EventCallback.Factory.Create(this, () => EliminarExpediente(e));
        dialogo.Mensaje = $"¿Desea eliminar el expediente del usuario {e.Id} junto a todos sus tramites?";
        dialogo.Mostrar();
    }

    private void EliminarExpediente(Expediente e)
    {
        @*CasoDeUsoExpedienteBaja.EjecutarExpedienteBaja(e.Id);*@
        @*Tengo que pasar usuario "u" que sea el admin
(el actual, único que puede entrar a esta pagina).
Pero no se como están hechos los permisos ni como se pasa.*@
        _lista = CasoDeUsoListarExpedientes.EjecutarConsultarTodos();
    }

    async Task<List<Permiso>> RecuperarPermisos()
    {
        var permisosJson = await sessionStorage.GetAsync<string>("permisos");
        if (permisosJson == null)
        {
            return new List<Permiso>();
        }
        var permisos = JsonSerializer.Deserialize<List<Permiso>>(permisosJson);
        if (permisos == null)
        {
            return new List<Permiso>();
        }
        return permisos;
    }
}