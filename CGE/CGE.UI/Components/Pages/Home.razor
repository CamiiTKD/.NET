@page "/"
@rendermode InteractiveServer
@inject ServicioSesion servicioSesion

<DialogoConfirmacion @ref="dialogo" />

<PageTitle>Home</PageTitle>

<h1>Bienvenido!</h1>
@if (shouldDisplay)
{
    <p>Quieres gestionar expedientes y trámites de manera segura? </p>

    <div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
        <nav class="flex-bottom">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/SignUp" Match="NavLinkMatch.All">
                    <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> SignUp
                </NavLink>
            </div>
        </nav>
    </div>
    <div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
        <nav class="flex-bottom">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/Login" Match="NavLinkMatch.All">
                    <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> SignIn
                </NavLink>
            </div>
        </nav>
    </div>
}
else{
    <h2>Sistema de Gestión de Expedientes y Trámites</h2>
    <button class="btn btn-primary" @onclick="()=>ConfirmarSignOut()">
        Salir
    </button>
}

@code {
    private bool shouldDisplay = true;

    protected override void OnInitialized()
    {
        if ((servicioSesion.Conectado) || (servicioSesion.UsuarioLogged != null)) 
        {   
            shouldDisplay = false;
            StateHasChanged();
        }
    }

    DialogoConfirmacion dialogo = null!;
    private void ConfirmarSignOut()
    {
        dialogo.OnConfirmado = EventCallback.Factory.Create(this, () => SignOut());
        dialogo.Mensaje = $"¿Seguro que deseas cerrar sesión?";
        dialogo.Mostrar();
    }
    private void SignOut()
    {
        servicioSesion.logOut();
        shouldDisplay = true;
        StateHasChanged();
    }
}